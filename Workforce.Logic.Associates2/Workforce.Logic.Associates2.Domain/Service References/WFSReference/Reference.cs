//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Workforce.Logic.Associates2.Domain.WFSReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociateDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class AssociateDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasKeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsComingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateID {
            get {
                return this.AssociateIDField;
            }
            set {
                if ((this.AssociateIDField.Equals(value) != true)) {
                    this.AssociateIDField = value;
                    this.RaisePropertyChanged("AssociateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchID {
            get {
                return this.BatchIDField;
            }
            set {
                if ((this.BatchIDField.Equals(value) != true)) {
                    this.BatchIDField = value;
                    this.RaisePropertyChanged("BatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCar {
            get {
                return this.HasCarField;
            }
            set {
                if ((this.HasCarField.Equals(value) != true)) {
                    this.HasCarField = value;
                    this.RaisePropertyChanged("HasCar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasKeys {
            get {
                return this.HasKeysField;
            }
            set {
                if ((this.HasKeysField.Equals(value) != true)) {
                    this.HasKeysField = value;
                    this.RaisePropertyChanged("HasKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsComing {
            get {
                return this.IsComingField;
            }
            set {
                if ((this.IsComingField.Equals(value) != true)) {
                    this.IsComingField = value;
                    this.RaisePropertyChanged("IsComing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class AddressDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociateAddressDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class AssociateAddressDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateAddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateAddressID {
            get {
                return this.AssociateAddressIDField;
            }
            set {
                if ((this.AssociateAddressIDField.Equals(value) != true)) {
                    this.AssociateAddressIDField = value;
                    this.RaisePropertyChanged("AssociateAddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateID {
            get {
                return this.AssociateIDField;
            }
            set {
                if ((this.AssociateIDField.Equals(value) != true)) {
                    this.AssociateIDField = value;
                    this.RaisePropertyChanged("AssociateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class BatchDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstructorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchID {
            get {
                return this.BatchIDField;
            }
            set {
                if ((this.BatchIDField.Equals(value) != true)) {
                    this.BatchIDField = value;
                    this.RaisePropertyChanged("BatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Instructor {
            get {
                return this.InstructorField;
            }
            set {
                if ((this.InstructorField.Equals(value) != true)) {
                    this.InstructorField = value;
                    this.RaisePropertyChanged("Instructor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstructorDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class InstructorDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstructorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstructorId {
            get {
                return this.InstructorIdField;
            }
            set {
                if ((this.InstructorIdField.Equals(value) != true)) {
                    this.InstructorIdField = value;
                    this.RaisePropertyChanged("InstructorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Associates2.Soap.ServiceMo" +
        "dels")]
    [System.SerializableAttribute()]
    public partial class GenderDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WFSReference.IAssociateService")]
    public interface IAssociateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAssociates", ReplyAction="http://tempuri.org/IAssociateService/GetAssociatesResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao[] GetAssociates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAssociates", ReplyAction="http://tempuri.org/IAssociateService/GetAssociatesResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao[]> GetAssociatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAddress", ReplyAction="http://tempuri.org/IAssociateService/GetAddressResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.AddressDao[] GetAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAddress", ReplyAction="http://tempuri.org/IAssociateService/GetAddressResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AddressDao[]> GetAddressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/GetAssociateAddressResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao[] GetAssociateAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/GetAssociateAddressResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao[]> GetAssociateAddressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetBatches", ReplyAction="http://tempuri.org/IAssociateService/GetBatchesResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.BatchDao[] GetBatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetBatches", ReplyAction="http://tempuri.org/IAssociateService/GetBatchesResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.BatchDao[]> GetBatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetInstructor", ReplyAction="http://tempuri.org/IAssociateService/GetInstructorResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao[] GetInstructor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetInstructor", ReplyAction="http://tempuri.org/IAssociateService/GetInstructorResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao[]> GetInstructorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetGender", ReplyAction="http://tempuri.org/IAssociateService/GetGenderResponse")]
        Workforce.Logic.Associates2.Domain.WFSReference.GenderDao[] GetGender();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/GetGender", ReplyAction="http://tempuri.org/IAssociateService/GetGenderResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.GenderDao[]> GetGenderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAssociate", ReplyAction="http://tempuri.org/IAssociateService/InsertAssociateResponse")]
        bool InsertAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao newassociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAssociate", ReplyAction="http://tempuri.org/IAssociateService/InsertAssociateResponse")]
        System.Threading.Tasks.Task<bool> InsertAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao newassociate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAddress", ReplyAction="http://tempuri.org/IAssociateService/InsertAddressResponse")]
        bool InsertAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao newaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAddress", ReplyAction="http://tempuri.org/IAssociateService/InsertAddressResponse")]
        System.Threading.Tasks.Task<bool> InsertAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao newaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/InsertAssociateAddressResponse")]
        bool InsertAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao newassocaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/InsertAssociateAddressResponse")]
        System.Threading.Tasks.Task<bool> InsertAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao newassocaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertBatch", ReplyAction="http://tempuri.org/IAssociateService/InsertBatchResponse")]
        bool InsertBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao newbatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertBatch", ReplyAction="http://tempuri.org/IAssociateService/InsertBatchResponse")]
        System.Threading.Tasks.Task<bool> InsertBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao newbatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertGender", ReplyAction="http://tempuri.org/IAssociateService/InsertGenderResponse")]
        bool InsertGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao newgender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertGender", ReplyAction="http://tempuri.org/IAssociateService/InsertGenderResponse")]
        System.Threading.Tasks.Task<bool> InsertGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao newgender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertInstructor", ReplyAction="http://tempuri.org/IAssociateService/InsertInstructorResponse")]
        bool InsertInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao newinstructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/InsertInstructor", ReplyAction="http://tempuri.org/IAssociateService/InsertInstructorResponse")]
        System.Threading.Tasks.Task<bool> InsertInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao newinstructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAssociate", ReplyAction="http://tempuri.org/IAssociateService/UpdateAssociateResponse")]
        bool UpdateAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAssociate", ReplyAction="http://tempuri.org/IAssociateService/UpdateAssociateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAddress", ReplyAction="http://tempuri.org/IAssociateService/UpdateAddressResponse")]
        bool UpdateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAddress", ReplyAction="http://tempuri.org/IAssociateService/UpdateAddressResponse")]
        System.Threading.Tasks.Task<bool> UpdateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/UpdateAssociateAddressResponse")]
        bool UpdateAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/UpdateAssociateAddressResponse")]
        System.Threading.Tasks.Task<bool> UpdateAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateBatch", ReplyAction="http://tempuri.org/IAssociateService/UpdateBatchResponse")]
        bool UpdateBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateBatch", ReplyAction="http://tempuri.org/IAssociateService/UpdateBatchResponse")]
        System.Threading.Tasks.Task<bool> UpdateBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateGender", ReplyAction="http://tempuri.org/IAssociateService/UpdateGenderResponse")]
        bool UpdateGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateGender", ReplyAction="http://tempuri.org/IAssociateService/UpdateGenderResponse")]
        System.Threading.Tasks.Task<bool> UpdateGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateInstructor", ReplyAction="http://tempuri.org/IAssociateService/UpdateInstructorResponse")]
        bool UpdateInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/UpdateInstructor", ReplyAction="http://tempuri.org/IAssociateService/UpdateInstructorResponse")]
        System.Threading.Tasks.Task<bool> UpdateInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAssociate", ReplyAction="http://tempuri.org/IAssociateService/DeleteAssociateResponse")]
        bool DeleteAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAssociate", ReplyAction="http://tempuri.org/IAssociateService/DeleteAssociateResponse")]
        System.Threading.Tasks.Task<bool> DeleteAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAddress", ReplyAction="http://tempuri.org/IAssociateService/DeleteAddressResponse")]
        bool DeleteAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAddress", ReplyAction="http://tempuri.org/IAssociateService/DeleteAddressResponse")]
        System.Threading.Tasks.Task<bool> DeleteAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/DeleteAssociateAddressResponse")]
        bool DeleteAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteAssociateAddress", ReplyAction="http://tempuri.org/IAssociateService/DeleteAssociateAddressResponse")]
        System.Threading.Tasks.Task<bool> DeleteAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteBatch", ReplyAction="http://tempuri.org/IAssociateService/DeleteBatchResponse")]
        bool DeleteBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteBatch", ReplyAction="http://tempuri.org/IAssociateService/DeleteBatchResponse")]
        System.Threading.Tasks.Task<bool> DeleteBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteGender", ReplyAction="http://tempuri.org/IAssociateService/DeleteGenderResponse")]
        bool DeleteGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteGender", ReplyAction="http://tempuri.org/IAssociateService/DeleteGenderResponse")]
        System.Threading.Tasks.Task<bool> DeleteGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteInstructor", ReplyAction="http://tempuri.org/IAssociateService/DeleteInstructorResponse")]
        bool DeleteInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssociateService/DeleteInstructor", ReplyAction="http://tempuri.org/IAssociateService/DeleteInstructorResponse")]
        System.Threading.Tasks.Task<bool> DeleteInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssociateServiceChannel : Workforce.Logic.Associates2.Domain.WFSReference.IAssociateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssociateServiceClient : System.ServiceModel.ClientBase<Workforce.Logic.Associates2.Domain.WFSReference.IAssociateService>, Workforce.Logic.Associates2.Domain.WFSReference.IAssociateService {
        
        public AssociateServiceClient() {
        }
        
        public AssociateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssociateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssociateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssociateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao[] GetAssociates() {
            return base.Channel.GetAssociates();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao[]> GetAssociatesAsync() {
            return base.Channel.GetAssociatesAsync();
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.AddressDao[] GetAddress() {
            return base.Channel.GetAddress();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AddressDao[]> GetAddressAsync() {
            return base.Channel.GetAddressAsync();
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao[] GetAssociateAddress() {
            return base.Channel.GetAssociateAddress();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao[]> GetAssociateAddressAsync() {
            return base.Channel.GetAssociateAddressAsync();
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.BatchDao[] GetBatches() {
            return base.Channel.GetBatches();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.BatchDao[]> GetBatchesAsync() {
            return base.Channel.GetBatchesAsync();
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao[] GetInstructor() {
            return base.Channel.GetInstructor();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao[]> GetInstructorAsync() {
            return base.Channel.GetInstructorAsync();
        }
        
        public Workforce.Logic.Associates2.Domain.WFSReference.GenderDao[] GetGender() {
            return base.Channel.GetGender();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Associates2.Domain.WFSReference.GenderDao[]> GetGenderAsync() {
            return base.Channel.GetGenderAsync();
        }
        
        public bool InsertAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao newassociate) {
            return base.Channel.InsertAssociate(newassociate);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao newassociate) {
            return base.Channel.InsertAssociateAsync(newassociate);
        }
        
        public bool InsertAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao newaddress) {
            return base.Channel.InsertAddress(newaddress);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao newaddress) {
            return base.Channel.InsertAddressAsync(newaddress);
        }
        
        public bool InsertAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao newassocaddress) {
            return base.Channel.InsertAssociateAddress(newassocaddress);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao newassocaddress) {
            return base.Channel.InsertAssociateAddressAsync(newassocaddress);
        }
        
        public bool InsertBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao newbatch) {
            return base.Channel.InsertBatch(newbatch);
        }
        
        public System.Threading.Tasks.Task<bool> InsertBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao newbatch) {
            return base.Channel.InsertBatchAsync(newbatch);
        }
        
        public bool InsertGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao newgender) {
            return base.Channel.InsertGender(newgender);
        }
        
        public System.Threading.Tasks.Task<bool> InsertGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao newgender) {
            return base.Channel.InsertGenderAsync(newgender);
        }
        
        public bool InsertInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao newinstructor) {
            return base.Channel.InsertInstructor(newinstructor);
        }
        
        public System.Threading.Tasks.Task<bool> InsertInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao newinstructor) {
            return base.Channel.InsertInstructorAsync(newinstructor);
        }
        
        public bool UpdateAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc) {
            return base.Channel.UpdateAssociate(assoc);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc) {
            return base.Channel.UpdateAssociateAsync(assoc);
        }
        
        public bool UpdateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address) {
            return base.Channel.UpdateAddress(address);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address) {
            return base.Channel.UpdateAddressAsync(address);
        }
        
        public bool UpdateAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd) {
            return base.Channel.UpdateAssociateAddress(assocadd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd) {
            return base.Channel.UpdateAssociateAddressAsync(assocadd);
        }
        
        public bool UpdateBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch) {
            return base.Channel.UpdateBatch(batch);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch) {
            return base.Channel.UpdateBatchAsync(batch);
        }
        
        public bool UpdateGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender) {
            return base.Channel.UpdateGender(gender);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender) {
            return base.Channel.UpdateGenderAsync(gender);
        }
        
        public bool UpdateInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor) {
            return base.Channel.UpdateInstructor(instructor);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor) {
            return base.Channel.UpdateInstructorAsync(instructor);
        }
        
        public bool DeleteAssociate(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc) {
            return base.Channel.DeleteAssociate(assoc);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAssociateAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateDao assoc) {
            return base.Channel.DeleteAssociateAsync(assoc);
        }
        
        public bool DeleteAddress(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address) {
            return base.Channel.DeleteAddress(address);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AddressDao address) {
            return base.Channel.DeleteAddressAsync(address);
        }
        
        public bool DeleteAssociateAddress(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd) {
            return base.Channel.DeleteAssociateAddress(assocadd);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAssociateAddressAsync(Workforce.Logic.Associates2.Domain.WFSReference.AssociateAddressDao assocadd) {
            return base.Channel.DeleteAssociateAddressAsync(assocadd);
        }
        
        public bool DeleteBatch(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch) {
            return base.Channel.DeleteBatch(batch);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBatchAsync(Workforce.Logic.Associates2.Domain.WFSReference.BatchDao batch) {
            return base.Channel.DeleteBatchAsync(batch);
        }
        
        public bool DeleteGender(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender) {
            return base.Channel.DeleteGender(gender);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGenderAsync(Workforce.Logic.Associates2.Domain.WFSReference.GenderDao gender) {
            return base.Channel.DeleteGenderAsync(gender);
        }
        
        public bool DeleteInstructor(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor) {
            return base.Channel.DeleteInstructor(instructor);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteInstructorAsync(Workforce.Logic.Associates2.Domain.WFSReference.InstructorDao instructor) {
            return base.Channel.DeleteInstructorAsync(instructor);
        }
    }
}
